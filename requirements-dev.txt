# requirements-dev.txt - Development Dependencies
# 개발 환경에서만 필요한 패키지들

# 기본 요구사항 포함
-r requirements.txt

# =============================================================================
# 🧪 테스팅 프레임워크
# =============================================================================

# 핵심 테스팅 도구
pytest>=7.4.0
pytest-asyncio>=0.21.1      # 비동기 테스트
pytest-cov>=4.1.0           # 테스트 커버리지
pytest-mock>=3.11.1         # 모킹 지원
pytest-xdist>=3.3.1         # 병렬 테스트 실행
pytest-benchmark>=4.0.0     # 성능 벤치마킹

# 테스트 데이터 생성
faker>=19.6.0               # 가짜 데이터 생성
factory-boy>=3.3.0          # 모델 팩토리
responses>=0.23.3           # HTTP 요청 모킹

# =============================================================================
# 🔍 코드 품질 및 린팅
# =============================================================================

# 코드 포맷팅
black>=23.7.0               # 코드 포맷터
isort>=5.12.0               # import 정렬
autoflake>=2.2.0            # 사용하지 않는 import 제거

# 린팅
flake8>=6.0.0               # 기본 린터
flake8-docstrings>=1.7.0    # docstring 체크
flake8-import-order>=0.18.2 # import 순서 체크
flake8-bugbear>=23.7.10     # 추가 버그 탐지
pep8-naming>=0.13.3         # 네이밍 컨벤션 체크

# 타입 체킹
mypy>=1.5.0                 # 정적 타입 체크
types-requests>=2.31.0      # requests 타입 스텁
types-PyYAML>=6.0.12        # PyYAML 타입 스텁

# 보안 검사
bandit>=1.7.5               # 보안 취약점 검사
safety>=2.3.5               # 알려진 보안 취약점 체크

# =============================================================================
# 📊 코드 분석 및 메트릭
# =============================================================================

# 코드 복잡도 분석
radon>=6.0.1                # 코드 복잡도 측정
xenon>=0.9.0                # 복잡도 임계값 체크
mccabe>=0.7.0               # McCabe 복잡도

# 코드 중복 검사
pylint>=2.17.5              # 종합 코드 분석
duplicate-code-detection-tool>=0.0.5  # 중복 코드 탐지

# =============================================================================
# 📝 문서화
# =============================================================================

# API 문서 생성
sphinx>=7.1.2               # 문서 생성기
sphinx-rtd-theme>=1.3.0     # Read the Docs 테마
sphinx-autodoc-typehints>=1.24.0  # 타입 힌트 문서화

# 마크다운 지원
myst-parser>=2.0.0          # 마크다운 파서
recommonmark>=0.7.1         # CommonMark 지원

# =============================================================================
# 🚀 개발 도구
# =============================================================================

# Git hooks 관리
pre-commit>=3.4.0           # Git pre-commit hooks

# 환경 관리
python-dotenv>=1.0.0        # 환경 변수 관리 (중복이지만 명시)
pip-tools>=7.3.0            # 의존성 관리

# 디버깅
ipython>=8.14.0             # 향상된 Python REPL
ipdb>=0.13.13               # IPython 디버거
pdbpp>=0.10.3               # 향상된 디버거

# =============================================================================
# 📈 프로파일링 및 성능 분석
# =============================================================================

# 성능 분석
line-profiler>=4.1.1        # 라인별 성능 프로파일링
memory-profiler>=0.61.0     # 메모리 사용량 프로파일링
py-spy>=0.3.14              # 실시간 프로파일러

# 벤치마킹
timeit                      # 내장 모듈
cProfile                    # 내장 모듈

# =============================================================================
# 🔧 개발 유틸리티
# =============================================================================

# 파일 변경 모니터링
watchdog>=3.0.0             # 파일 시스템 모니터링

# 설정 파일 검증
yamllint>=1.32.0            # YAML 린팅
toml-sort>=0.23.1           # TOML 정렬

# 네트워크 테스팅
httpx>=0.24.1               # HTTP 클라이언트 (테스트용)

# =============================================================================
# 🎨 IDE 지원
# =============================================================================

# VS Code 지원
pylsp>=1.8.0                # Python Language Server Protocol (선택적)

# Jupyter 지원 (데이터 분석용)
jupyter>=1.0.0              # Jupyter 노트북
jupyterlab>=4.0.5           # JupyterLab
notebook>=7.0.2             # 클래식 노트북

# =============================================================================
# 🐳 Docker 개발 지원
# =============================================================================

# Docker 유틸리티
docker>=6.1.3              # Docker SDK
docker-compose>=1.29.2     # Docker Compose (구버전 호환)

# =============================================================================
# 📦 빌드 및 패키징
# =============================================================================

# 패키징 도구
build>=0.10.0               # PEP 517 빌드 도구
wheel>=0.41.2               # Wheel 패키징
twine>=4.0.2                # PyPI 업로드 도구

# 설정 파일
setuptools>=68.1.2          # 패키지 설정
setuptools-scm>=7.1.0       # 버전 관리

# =============================================================================
# 📊 데이터 분석 지원 (개발 단계)
# =============================================================================

# 데이터 탐색
pandas-profiling>=3.6.6     # 자동 EDA 리포트
sweetviz>=2.1.4             # 데이터 시각화 및 비교

# 추가 시각화
plotly-dash>=2.14.1         # 인터랙티브 대시보드

# =============================================================================
# 🔄 CI/CD 지원
# =============================================================================

# GitHub Actions 지원
coverage>=7.3.0             # 커버리지 측정
codecov>=2.1.13             # 커버리지 리포팅

# =============================================================================
# 💡 개발 환경 설정 가이드
# =============================================================================

# 1. 개발 환경 설치:
#    pip install -r requirements-dev.txt

# 2. pre-commit 설정:
#    pre-commit install

# 3. 테스트 실행:
#    pytest tests/ --cov=src/ --cov-report=html

# 4. 코드 품질 체크:
#    black src/
#    isort src/
#    flake8 src/
#    mypy src/

# 5. 보안 검사:
#    bandit -r src/
#    safety check

# 6. 문서 생성:
#    sphinx-build -b html docs/ docs/_build/html

# =============================================================================
# ⚙️ 개발 도구 설정 파일들
# =============================================================================

# 다음 설정 파일들도 함께 생성하면 좋습니다:
# - .pre-commit-config.yaml
# - pyproject.toml
# - setup.cfg
# - .flake8
# - mypy.ini
# - pytest.ini